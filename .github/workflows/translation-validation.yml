name: Translation Validation

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'src/assets/i18n/**'
      - 'src/**/*.ts'
      - 'src/**/*.html'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'src/assets/i18n/**'
      - 'src/**/*.ts'
      - 'src/**/*.html'

jobs:
  validate-translations:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run translation validation
      run: npm run i18n:validate
      
    - name: Upload validation report
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: translation-validation-report
        path: translation-validation-report.json
        
    - name: Comment PR with validation results
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('translation-validation-report.json', 'utf8'));
          
          let comment = '## ❌ Translation Validation Failed\n\n';
          
          if (report.missingKeys) {
            for (const [lang, missing] of Object.entries(report.missingKeys)) {
              if (missing.missingFrom_tr?.length > 0) {
                comment += `### Missing in ${lang.toUpperCase()} from TR: ${missing.missingFrom_tr.length} keys\n`;
                comment += missing.missingFrom_tr.slice(0, 5).map(k => `- \`${k}\``).join('\n');
                if (missing.missingFrom_tr.length > 5) {
                  comment += `\n- ... and ${missing.missingFrom_tr.length - 5} more`;
                }
                comment += '\n\n';
              }
              if (missing.missingFrom_en?.length > 0) {
                comment += `### Missing in ${lang.toUpperCase()} from EN: ${missing.missingFrom_en.length} keys\n`;
                comment += missing.missingFrom_en.slice(0, 5).map(k => `- \`${k}\``).join('\n');
                if (missing.missingFrom_en.length > 5) {
                  comment += `\n- ... and ${missing.missingFrom_en.length - 5} more`;
                }
                comment += '\n\n';
              }
            }
          }
          
          if (report.emptyValues) {
            for (const [lang, empty] of Object.entries(report.emptyValues)) {
              if (empty.length > 0) {
                comment += `### Empty values in ${lang.toUpperCase()}: ${empty.length} keys\n`;
                comment += empty.slice(0, 5).map(k => `- \`${k}\``).join('\n');
                if (empty.length > 5) {
                  comment += `\n- ... and ${empty.length - 5} more`;
                }
                comment += '\n\n';
              }
            }
          }
          
          comment += '\nPlease fix these translation issues before merging.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });