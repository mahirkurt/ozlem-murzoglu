name: CI Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔍 Run ESLint
        run: npm run lint
        continue-on-error: false
      
      - name: 🎨 Check code formatting
        run: npm run format:check
      
      - name: 🌍 Validate translations
        run: npm run i18n:validate
      
      - name: 🏗️ Build application
        run: npm run build
      
      - name: 📊 Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7
  
  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: 🖼️ Run visual regression tests
        run: npm run test:visual
      
      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: 📸 Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-failures
          path: test-visual-regression.spec.js-snapshots/
          retention-days: 30
  
  i18n-tests:
    name: i18n Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: 🌍 Run i18n tests
        run: npm run test:i18n
      
      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: i18n-test-report
          path: playwright-report/
          retention-days: 30
  
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 🔒 Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: 🔍 Run dependency check
        run: |
          npm list --depth=0 --json > dependencies.json
          echo "Dependencies have been listed for review"
  
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [quality-checks, visual-tests, i18n-tests]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build for preview
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: 💬 Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All checks passed! Preview deployment will be available soon.'
            })

  notify-slack:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quality-checks, visual-tests, i18n-tests]
    if: always()
    
    steps:
      - name: 📢 Send notification
        run: |
          echo "CI Pipeline completed"
          echo "Status: ${{ needs.quality-checks.result }}"
          # Add Slack or Discord notification here if configured