// ====================================
// Design Tokens: Breakpoints
// Single Source of Truth for Responsive Design
// ====================================

// SCSS Variables for import in _index.scss
$breakpoint-xs: 320px;
$breakpoint-sm: 600px;
$breakpoint-md: 768px;
$breakpoint-lg: 1024px;
$breakpoint-xl: 1280px;
$breakpoint-xxl: 1440px;
$breakpoint-xxxl: 1920px;

// Container widths
$container-xs: 100%;
$container-sm: 540px;
$container-md: 720px;
$container-lg: 960px;
$container-xl: 1140px;
$container-xxl: 1320px;
$container-xxxl: 1440px;

:root {
  // Breakpoint tokens
  --breakpoint-xs: 320px;
  --breakpoint-sm: 600px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-xxl: 1440px;
  --breakpoint-xxxl: 1920px;

  // Container max widths
  --container-xs: 100%;
  --container-sm: 540px;
  --container-md: 720px;
  --container-lg: 960px;
  --container-xl: 1140px;
  --container-xxl: 1320px;
  --container-xxxl: 1440px;

  // Fluid container with max width
  --container-max-width: min(1440px, 90vw);
  --container-fluid: 100%;

  // Grid columns
  --grid-columns: 12;
  --grid-gutter: var(--spacing-lg);

  // Minimum touch target size (accessibility)
  --min-touch-target: 48px;
  
  // Minimum clickable area
  --min-clickable: 44px;

  // Safe area insets for mobile devices
  --safe-area-inset-top: env(safe-area-inset-top, 0);
  --safe-area-inset-right: env(safe-area-inset-right, 0);
  --safe-area-inset-bottom: env(safe-area-inset-bottom, 0);
  --safe-area-inset-left: env(safe-area-inset-left, 0);
}

// Mixins for media queries using tokens
@mixin breakpoint-up($size) {
  @if $size == xs {
    @media (min-width: #{$breakpoint-xs}) { @content; }
  } @else if $size == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  } @else if $size == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  } @else if $size == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  } @else if $size == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  } @else if $size == xxl {
    @media (min-width: #{$breakpoint-xxl}) { @content; }
  } @else if $size == xxxl {
    @media (min-width: #{$breakpoint-xxxl}) { @content; }
  }
}

@mixin breakpoint-down($size) {
  @if $size == xs {
    @media (max-width: #{$breakpoint-xs - 1px}) { @content; }
  } @else if $size == sm {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  } @else if $size == md {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  } @else if $size == lg {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  } @else if $size == xl {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  } @else if $size == xxl {
    @media (max-width: #{$breakpoint-xxl - 1px}) { @content; }
  } @else if $size == xxxl {
    @media (max-width: #{$breakpoint-xxxl - 1px}) { @content; }
  }
}

@mixin breakpoint-between($min, $max) {
  @media (min-width: #{$min}) and (max-width: #{$max - 1px}) { @content; }
}