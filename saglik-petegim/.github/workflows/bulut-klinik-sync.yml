name: BulutKlinik Data Sync

on:
  schedule:
    # Run every hour from 8 AM to 7 PM Turkey time, Monday to Saturday (excluding Sunday)
    # Turkey is UTC+3, so 8 AM = 5:00 UTC, 7 PM = 16:00 UTC
    # Days: 1-6 (Monday=1 to Saturday=6, Sunday=0 is excluded)
    - cron: '0 5-16 * * 1-6'
  workflow_dispatch: # Allow manual trigger
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  PYTHON_VERSION: '3.10'
  
jobs:
  sync-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
      
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: üì¶ Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: üìã Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install firebase-admin google-cloud-firestore pandas
      
      - name: üîß Setup environment
        run: |
          echo "BULUT_KLINIK_DATA_DIR=apps/backend_app/data/bulut_klinik" >> $GITHUB_ENV
          echo "Sync started at: $(date)" > sync_log.txt
      
      - name: üîÑ Sync BulutKlinik Data
        env:
          BULUT_KLINIK_USERNAME: ${{ secrets.BULUT_KLINIK_USERNAME }}
          BULUT_KLINIK_PASSWORD: ${{ secrets.BULUT_KLINIK_PASSWORD }}
          GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "Starting data sync..."
          python apps/backend_app/scripts/sync/bulut_klinik_data_sync.py
          echo "Sync completed at: $(date)" >> sync_log.txt
      
      - name: üì§ Import to Firestore
        env:
          GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "Starting Enhanced Firestore import..."
          python apps/backend_app/scripts/sync/enhanced_firestore_import.py
          echo "Import completed at: $(date)" >> sync_log.txt
      
      - name: üßπ Clean up old files
        if: always()
        run: |
          mkdir -p apps/backend_app/data/bulut_klinik
          cd apps/backend_app/data/bulut_klinik
          # Keep only latest files and remove old dated files
          find . -name "*_20*.csv" -not -name "*_latest.csv" -type f -mtime +7 -delete 2>/dev/null || true
          # Remove any temporary files
          rm -f *.crdownload *.tmp 2>/dev/null || true
          echo "Cleanup completed at: $(date)" >> ../../../../sync_log.txt
      
      - name: üìä Generate Summary Report
        if: always()
        run: |
          echo "## üìä Sync Summary Report" > sync_summary.md
          echo "" >> sync_summary.md
          echo "**Date:** $(date)" >> sync_summary.md
          echo "**Workflow Run:** ${{ github.run_number }}" >> sync_summary.md
          echo "**Triggered by:** ${{ github.event_name }}" >> sync_summary.md
          echo "" >> sync_summary.md
          
          if [ -f "sync_report.md" ]; then
            cat sync_report.md >> sync_summary.md
          else
            echo "No detailed report available" >> sync_summary.md
          fi
          
          echo "" >> sync_summary.md
          echo "### üìÅ Files in data directory:" >> sync_summary.md
          ls -la apps/backend_app/data/bulut_klinik/*.csv 2>/dev/null | tail -10 >> sync_summary.md || echo "No CSV files found" >> sync_summary.md
          
          echo "" >> sync_summary.md
          echo "### üìù Sync Log:" >> sync_summary.md
          cat sync_log.txt >> sync_summary.md
      
      - name: üì¶ Upload sync artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-report-${{ github.run_number }}
          path: |
            sync_summary.md
            sync_report.md
            sync_log.txt
            apps/backend_app/data/bulut_klinik/sync_report_*.json
            apps/backend_app/data/bulut_klinik/import_report_*.json
          retention-days: 30
      
      - name: üí¨ Post status to workflow summary
        if: always()
        run: |
          echo "## üîÑ BulutKlinik Sync Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ **Status:** Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Status:** Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "sync_summary.md" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### üìã Summary" >> $GITHUB_STEP_SUMMARY
            tail -20 sync_summary.md >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: üö® Notify on failure
        if: failure()
        run: |
          echo "‚ùå Sync failed at $(date)"
          echo "Error details can be found in the workflow logs"
          # You can add email/Slack notification here if needed